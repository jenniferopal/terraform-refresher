name: 'Terraform CI/CD'

on:
    push:
        branches: ['main']
    pull_request:
        branches: ['main']

permissions:
    contents: read 

jobs:
    terraform:
        name: 'Terraform'
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: "1.5.0" 

            - name: Terraform Format Check
              run: terraform fmt -check
              working-directory: ./terraform-aws-practice/02-web-app-infrastructure

            - name: Terraform Init
              run: terraform init
              working-directory: ./terraform-aws-practice/02-web-app-infrastructure
              env: 
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            
            - name: Terraform Plan
              run: terraform plan -no-color
              working-directory: ./terraform-aws-practice/02-web-app-infrastructure
              env: 
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

            - name: Terraform Apply
              if: github.ref == 'refs/heads/main'
              run: terraform apply -auto-approve
              working-directory: ./terraform-aws-practice/02-web-app-infrastructure
              env: 
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

            - name: Comment PR
              if: github.event_name == 'pull_request'
              uses: actions/github-script@v7
              with:
                script: |
                  const output = `### Terraform Plan Results

                  \`\`\`
                  ${{ steps.plan.outputs.stdout }}
                  \`\`\``;
            
                  github.rest.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: output
                  }); 